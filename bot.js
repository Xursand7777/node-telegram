const { Telegraf } = require('telegraf');
const cron = require('node-cron');

const BOT_TOKEN = process.env.BOT_TOKEN;
if (!BOT_TOKEN) throw new Error('BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω!');
const bot = new Telegraf(BOT_TOKEN);

// –•—Ä–∞–Ω–∏–º ID –≥—Ä—É–ø–ø, –∫—É–¥–∞ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –±–æ—Ç
let groupIds = new Set();

// –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –≥—Ä—É–ø–ø—É
bot.on('new_chat_members', (ctx) => {
    groupIds.add(ctx.chat.id);
    ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞ üì¢');
});

// –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤—Ä—É—á–Ω—É—é (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É)
bot.command('start', (ctx) => {
    if (ctx.chat.type === 'group' || ctx.chat.type === 'supergroup') {
        groupIds.add(ctx.chat.id);
        ctx.reply('–ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ!');
    } else {
        ctx.reply('–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è!');
    }
});

// –ö–∞–∂–¥—ã–µ 2 —á–∞—Å–∞ –ø–æ UTC
cron.schedule('0 */2 * * *', () => {
    groupIds.forEach((chatId) => {
        bot.telegram.sendMessage(chatId, '‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤–∞–∂–Ω–æ–µ!');
    });
});

bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...');
